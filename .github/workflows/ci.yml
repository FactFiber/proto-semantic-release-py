# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI
on:
  push:
    branches: [ main, alpha, beta ]
  pull_request:
    branches: [ main, alpha, beta ]

jobs:
  Quality:
    runs-on: python:3.8.12-slim-buster
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install Python Poetry
      uses: abatilo/actions-poetry@v2.1.4
      with:
        poetry-version: 1.1.12
    - name: Configure poetry
      shell: bash
      run: python -m poetry config virtualenvs.in-project true
    - name: View poetry version
      run: poetry --version
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m poetry install
    - name: Sort imports using isort
      run: |
        python -m poetry run isort .
    - name: Format using black src tests
      run: |
        python -m poetry run black src tests
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        python -m poetry run flake8 src tests
    - name: Run mypy
      run: |
        python -m poetry run mypy src tests
    - name: Test with pytest with coverage
      run: |
        python -m poetry run pytest -v tests --cov-fail-under=100
    
  Release:
    needs: Quality
    runs-on: ubuntu-latest
    concurrency: release
    # https://github.community/t/how-do-i-specify-job-dependency-running-in-another-workflow/16482
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev') && !contains(github.event.head_commit.message, 'chore(release):')

    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: Python Semantic Release
      uses: relekang/python-semantic-release@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        repository_username: __token__
        repository_password: ${{ secrets.PYPI_TOKEN }}
