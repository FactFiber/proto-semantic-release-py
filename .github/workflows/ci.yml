# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: CI
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Quality:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: 3.9
    - name: Install Python Poetry
      uses: abatilo/actions-poetry@v2.1.4
      with:
        poetry-version: 1.1.12
    - name: Configure poetry
      shell: bash
      run: python -m poetry config virtualenvs.in-project true
    - name: View poetry version
      run: poetry --version
    - name: Install dependencies
      run: |
        python -m poetry install
    - name: Sort imports using isort
      run: |
        python -m poetry run isort .
    - name: Format using black src tests
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        python -m poetry run flake8 src tests
    - name: Run mypy
      run: |
        python -m poetry run mypy src tests
    - name: Test with pytest with coverage
      run: |
        python -m poetry run pytest -v tests --cov-fail-under=100
    
  Release:
    needs: Quality
    runs-on: ubuntu-latest
    concurrency: release
    # https://github.community/t/how-do-i-specify-job-dependency-running-in-another-workflow/16482
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && !contains(github.event.head_commit.message, 'chore(release):'

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Install semantic-release
        run: npm install -g semantic-release @semantic-release/github @semantic-release/commit-analyzer @semantic-release/git @semantic-release/release-notes-generator "@google/semantic-release-replace-plugin"
        # semantic-release-pypi
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install setuptools
        run: python -m pip install --upgrade setuptools wheel twine
      - name: Release
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          # PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
        run: npx semantic-release


    # steps:
    # - uses: actions/checkout@v2
    #   with:
    #     fetch-depth: 0

    # - name: Python Semantic Release
    #   uses: relekang/python-semantic-release@master
    #   with:
    #     github_token: ${{ secrets.GITHUB_TOKEN }}
    #     repository_username: __token__
    #     repository_password: ${{ secrets.PYPI_TOKEN }}
